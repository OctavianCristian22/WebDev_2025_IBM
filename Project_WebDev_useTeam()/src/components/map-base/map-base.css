.map-container {
    width: 100%;
    max-width: 500px;
    height: 500px;
    margin: 0;
  overflow:hidden;
    position: relative;
    background-color: #555;
    box-shadow: 0 0 10px rgba(0,0,0,0.5);
    border: 2px solid black;
}

.special-zone {
  outline: 2px solid red;
}


.score-board {
    position: absolute;
    top: 10px;
    right: 10px;
    background: rgba(0, 0, 0, 0.7);
    color: white;
    padding: 10px 20px;
    border-radius: 20px;
    z-index: 1; 
    display: block;
}

.map-box {
    position: absolute;
    top: 0;
    left: 0;
    transition: transform 0.2s linear;
    display: grid;
}

.map-cell {
    width: 48px;
    height: 48px;
    box-sizing: border-box;
    background-color: #7b6f6f;
    position: relative;
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;
    margin: 0;
}

.map-cell > div {
    position: absolute;
    top: 25%;
    left: 25%;
    width: 50%;
    height: 50%;
    background-color: yellow;
    border-radius: 50%;
}

.player {
    position: absolute;
    width: 50px;
    height: 50px;
    background-size: cover;
    z-index: 10;
    transition: left 0.1s linear, top 0.1s linear;
}

.attack-line {
    position: absolute;
    width: 50px;
    height: 50px;
    background-color: pink;
    border-radius: 50%;
    transition: left 0.1s ease-in-out, top 0.1s ease-in-out, opacity 0.1s ease-in-out;
}

.tree-cell {
    background-image: url('tree.png');
    background-size: cover;
    background-position: center;
}

.rock-cell {
    background-image: url('rock.png');
    background-size: cover;
    background-position: center;
}

.water-cell {
    background-image: url('water.png');
    background-size: cover;
    background-position: center;
}
/*
import React, { useState, useEffect, useRef } from 'react';
import { TILE_SIZE_PX } from '../constants/constante';
import playerSprite from './sprite_base_addon_2012_12_14.png';

const SPRITE_WIDTH = 32;
const SPRITE_HEIGHT = 32;
const FRAMES_PER_DIRECTION = 4;
const NUM_ROWS = 4;

const DIRECTIONS = {
  DOWN: 0,
  LEFT: 1,
  RIGHT: 2,
  UP: 3,
};

const Player = ({ x, y, direction = 'DOWN', moving = false }) => {
  const [frame, setFrame] = useState(0);
  const animationRef = useRef(null);

  useEffect(() => {
    if (moving) {
      animationRef.current = setInterval(() => {
        setFrame((prev) => (prev + 1) % FRAMES_PER_DIRECTION);
      }, 100);
    } else {
      clearInterval(animationRef.current);
      setFrame(0);
    }
    return () => clearInterval(animationRef.current);
  }, [moving]);

  const backgroundX = -frame * SPRITE_WIDTH;
  const backgroundY = -DIRECTIONS[direction] * SPRITE_HEIGHT;

  const style = {
    position: 'absolute',
    width: `${TILE_SIZE_PX}px`,
    height: `${TILE_SIZE_PX}px`,
    backgroundImage: `url(${playerSprite})`,
    backgroundSize: `${SPRITE_WIDTH * FRAMES_PER_DIRECTION}px ${SPRITE_HEIGHT * NUM_ROWS}px`,
    backgroundPosition: `${backgroundX}px ${backgroundY}px`,
    imageRendering: 'pixelated',
    left: `${x * TILE_SIZE_PX}px`,
    top: `${y * TILE_SIZE_PX}px`,
    zIndex: 10,
  };

  return <div className="player" style={style} />;
};

export default Player;
*/
